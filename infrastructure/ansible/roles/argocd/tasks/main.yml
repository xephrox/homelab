---
# - name: install pip
#   ansible.builtin.apt:
#     pkg: 
#       - python3-pip
#       - python3-kubernetes
#     state: present
#     update_cache: true

- name: Check if ArgoCD namespace exists
  ansible.builtin.shell: |
    kubectl get namespace argocd
  register: namespace_check
  ignore_errors: true
  changed_when: false

- name: Create ArgoCD namespace
  ansible.builtin.shell: |
    kubectl create namespace argocd
  when: namespace_check.rc != 0

- name: Install ArgoCD
  ansible.builtin.shell: |
    kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/{{ argo_cd_version }}/manifests/ha/install.yaml 
  delegate_to: 127.0.0.1
  become: false

- name: Patch ArgoCD server
  ansible.builtin.shell: |
    kubectl patch deploy argocd-server -n argocd --type json -p '[{"op": "replace", "path": "/spec/template/spec/containers/0/command", "value": ["argocd-server", "--insecure", "--staticassets","/shared/app"]}, {"op": "replace", "path": "/spec/template/spec/containers/0/env", "value": [{"name": "ARGOCD_SYNC_WAVE_DELAY", "value": "30"}]}, {"op": "replace", "path": "/spec/template/spec/containers/0/env", "value": [{"name": "TZ", "value": "Europe/Stockholm"}]}]'
  delegate_to: 127.0.0.1
  become: false

- name: Wait for ArgoCD deployment to be up
  ansible.builtin.pause:
    minutes: 2

- name: Add ArgoCD Application (app of apps) to cluster
  ansible.builtin.shell: |
    kubectl apply -n argocd -f {{ cluster_application_url }}